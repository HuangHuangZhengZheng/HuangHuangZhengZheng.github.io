<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Numpy - Tag - HHZZ`s space</title>
        <link>http://localhost:1313/tags/numpy/</link>
        <description>Numpy - Tag - HHZZ`s space</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 13 Aug 2024 15:19:36 &#43;0800</lastBuildDate><atom:link href="http://localhost:1313/tags/numpy/" rel="self" type="application/rss+xml" /><item>
    <title>DATA100-lab11: Principal Component Analysis</title>
    <link>http://localhost:1313/datalab11/</link>
    <pubDate>Tue, 13 Aug 2024 15:19:36 &#43;0800</pubDate>
    <author>HHZZ</author>
    <guid>http://localhost:1313/datalab11/</guid>
    <description><![CDATA[1 2 3 # Initialize Otter import otter grader = otter.Notebook(&#34;lab11.ipynb&#34;) Lab 11: Principal Component Analysis In this lab assignment, we will walk through two examples that use Principal Component Analysis (PCA): one involving a dataset of iris plants, and another involving an artificial &ldquo;surfboard&rdquo; 3D dataset.
1 2 3 4 5 6 7 8 9 10 11 12 # Run this cell to set up your notebook from sklearn.]]></description>
</item>
<item>
    <title>DATA100-lab12: Logistic Regression</title>
    <link>http://localhost:1313/datalab12/</link>
    <pubDate>Tue, 13 Aug 2024 15:19:36 &#43;0800</pubDate>
    <author>HHZZ</author>
    <guid>http://localhost:1313/datalab12/</guid>
    <description><![CDATA[1 2 3 # Initialize Otter import otter grader = otter.Notebook(&#34;lab12.ipynb&#34;) Lab 12: Logistic Regression 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # Run this cell to set up your notebook import numpy as np import pandas as pd import sklearn import sklearn.datasets import matplotlib.pyplot as plt import seaborn as sns import plotly.offline as py import plotly.graph_objs as go import plotly.]]></description>
</item>
<item>
    <title>DATA100-lab9: Probability and Modeling</title>
    <link>http://localhost:1313/datalab9/</link>
    <pubDate>Tue, 13 Aug 2024 15:19:35 &#43;0800</pubDate>
    <author>HHZZ</author>
    <guid>http://localhost:1313/datalab9/</guid>
    <description><![CDATA[1 2 3 # Initialize Otter import otter grader = otter.Notebook(&#34;lab09.ipynb&#34;) Lab 9: Probability and Modeling In this lab, you will explore estimators and modeling in two parts:
You will explore if the &ldquo;sample max&rdquo; is a biased estimator for the true max of a population.
Given a sample (and no access to the population), you will bootstrap the sample correlation estimator to infer properties of the population correlation of two features.]]></description>
</item>
<item>
    <title>DATA100-lab7: Gradient Descent and Feature Engineering</title>
    <link>http://localhost:1313/datalab7/</link>
    <pubDate>Tue, 13 Aug 2024 15:19:34 &#43;0800</pubDate>
    <author>HHZZ</author>
    <guid>http://localhost:1313/datalab7/</guid>
    <description><![CDATA[1 2 3 # Initialize Otter import otter grader = otter.Notebook(&#34;lab07.ipynb&#34;) Lab 7: Gradient Descent and Feature Engineering In this lab, we will work through the process of:
Defining loss functions Feature engineering Minimizing loss functions using numeric methods and analytical methods Understanding what happens if we use the analytical solution for OLS on a matrix with redundant features Computing a gradient for a nonlinear model Using gradient descent to optimize the nonline model This lab will continue using the toy tips calculation dataset used in Labs 5 and 6.]]></description>
</item>
<item>
    <title>DATA100-lab1</title>
    <link>http://localhost:1313/datalab1/</link>
    <pubDate>Sat, 13 Jul 2024 13:27:45 &#43;0800</pubDate>
    <author>HHZZ</author>
    <guid>http://localhost:1313/datalab1/</guid>
    <description><![CDATA[1 2 3 # Initialize Otter import otter grader = otter.Notebook(&#34;lab01.ipynb&#34;) Lab 01 Welcome to the first lab of Data 100! This lab is meant to help you familiarize yourself with JupyterHub, review Python and numpy, and introduce you to matplotlib, a Python visualization library.
Part 1: Jupyter Tips Viewing Documentation To output the documentation for a function, use the help function.
1 2 # help(print) ?print You can also use Jupyter to view function documentation inside your notebook.]]></description>
</item>
</channel>
</rss>
